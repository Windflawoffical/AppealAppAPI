# This is a basic workflow to help you get started with Actions

name: CI-CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '21' #test

      - name: Set up Maven
        run: |
          sudo apt-get install -y maven

      - name: Run userService tests
        run: |
          cd pr6_first-microservice
          mvn test
      - name: Run appealService tests
        run: |
          cd pr6_second-microservice
          mvn test
        
  # This workflow contains a single job called "build"
  build-and-push-to-dh:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [tests]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: pulling
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
              version: v0.7.0

      # Runs a single command using the runners shell
      - name: docker-compose build
        run: docker-compose build
        
      - name: docker login
        uses: docker/login-action@v3.0.0
        with: 
              username: ${{ secrets.DOCKER_USERNAME }}
              password: ${{ secrets.DOCKER_PASSWORD }}

      # Runs a set of commands using the runners shell
      - name: pushing
        run: docker-compose push
        
  build-and-push-to-yc:
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - name: pulling
        uses: actions/checkout@v3
              
      - name: docker build
        run: docker build --file ./pr6_first-microservice/Dockerfile -t cr.yandex/${{ secrets.YC_REGISTRY_ID }}/firstms:latest . --platform=linux/amd64

      - name: Login to YC Registry
        uses: docker/login-action@v3.0.0
        with:
          registry: cr.yandex
          username: json_key
          password: ${{ secrets.YC_KEYS }}
        
      - name: pushing
        run: docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/firstms:latest
      
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build-and-push-to-yc]
    steps:
    - name: deploy serverless container
      uses: yc-actions/yc-sls-container-deploy@v1
      with:
        yc-sa-json-credentials: ${{ secrets.YC_KEYS }}
        container-name: ${{ secrets.YC_CONTAINER_NAME }}
        folder-id: ${{ secrets.YC_FOLDER_ID }}
        revision-image-url: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/firstms:latest
        revision-service-account-id: ${{ secrets.YC_SA_ID }}
        revision-env:
                      POSTGRES_URL=${{ secrets.POSTGRES_URL }}
        revision-memory: 4GB
