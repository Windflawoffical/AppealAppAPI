version: '3.8'
services:
  firstms:
    container_name: firstms
    image: windflaw8/first_ms
    build:
      context: ./pr6_first-microservice
      dockerfile: Dockerfile
    ports:
      - 8081:8081
    depends_on:
      - secondms
    environment:
      - SERVER_PORT=8081
      - SPRING_APPLICATION_NAME=userservice
      - SPRING_DATASOURCE_URL=jdbc:postgresql://51.250.26.59:5432/appealapp
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
  secondms:
    container_name: secondms
    image: windflaw8/second_ms
    build:
      context: ./pr6_second-microservice
      dockerfile: Dockerfile
    ports:
      - 8082:8082
    depends_on:
      - eureka-server
    #depends_on:
      #- db
    environment:
      - SPRING_APPLICATION_NAME=appealservice
      - SPRING_DATASOURCE_URL=jdbc:postgresql://51.250.26.59:5432/appealapp
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
  eureka-server:
    container_name: eureka-server
    hostname: eureka-server
    image: windflaw8/eureka-server
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - 8761:8761
    environment:
      - SPRING_APPLICATION_NAME=eureka-server
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
  api-gateway:
    container_name: api-gateway
    image: windflaw8/api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    depends_on:
      - eureka-server
    ports:
      - 9000:9000
    environment:
      - SPRING_APPLICATION_NAME=api_gateway
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI=http://keycloak:8080/realms/spring-microservice-realm
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI=http://keycloak:8080/realms/spring-microservice-realm/protocol/openid-connect/certs
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:latest
    hostname: keycloak
    ports:
      - 8080:8080
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    command: 
      - start-dev
      - --import-realm
    volumes:
      - ./keycloak-realm/microservice-auth.json:/opt/keycloak/data/import/microservice-auth.json
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - eureka-server
      - api-gateway
      - secondms
      - firstms
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - 3000:3000
    links:
      - prometheus:prometheus
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password

  #db:
    #container_name: db
    #image: postgres:14.7-alpine
    #ports:
      #- 5433:5432
    #environment:
      #POSTGRES_USER: secUREusER
      #POSTGRES_PASSWORD: StrongEnoughPassword)
